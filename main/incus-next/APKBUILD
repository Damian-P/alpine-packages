pkgname=incus-next
pkgver=6.16.0
pkgrel=6
pkgdesc="Powerful system container and virtual machine manager - Main branch"
url="https://github.com/lxc/incus"
arch="aarch64 x86_64"
license="Apache-2.0"
depends="acl
	attr
	ca-certificates
	dbus
	dnsmasq
	lego
	lxc
	iproute2
	iptables
	netcat-openbsd
	rsync
	squashfs-tools
	shadow-uidmap
	tar
	xz
	"
makedepends="acl-dev
	autoconf
	automake
	cowsql-dev
	raft-cowsql-dev
	eudev-dev
	gettext-dev
	go
	intltool
	libcap-dev
	libtool
	libuv-dev
	linux-headers
	lxc-dev
	lz4-dev
	sqlite-dev
	tcl-dev
	"
subpackages="$pkgname-client
	$pkgname-agent
	$pkgname-agent-openrc:agent_openrc:noarch
	$pkgname-user
	$pkgname-user-openrc:user_openrc:noarch
	$pkgname-openrc
	$pkgname-conversion
	$pkgname-utils
	$pkgname-bash-completion:bashcomp:noarch
	$pkgname-vm:vm:noarch
	$pkgname-oci:oci:noarch
	"
install="$pkgname.pre-install"
options="net"
source="$pkgname-$pkgver.tar.gz::https://codeload.github.com/lxc/incus/tar.gz/refs/heads/main
	incusd.confd
	incusd.initd
	incus-agent.initd
	incus-user.initd

	0001-statically-build-incus-agent-and-incus-migrate.patch
	"
builddir="$srcdir/incus-main"

_tools="fuidshift
	generate-config
	generate-database
	incus
	incus-benchmark
	incus-migrate
	incus-simplestreams
	lxc-to-incus
	lxd-to-incus
	mini-oidc
	sysinfo
	tls2jwt
	"


_project="github.com/lxc/incus"

export GOFLAGS="$GOFLAGS -tags=libsqlite3"
export GOCACHE="${GOCACHE:-"$srcdir/go-cache"}"
export GOTMPDIR="${GOTMPDIR:-"$srcdir"}"
export GOMODCACHE="${GOMODCACHE:-"$srcdir/go"}"
export GOPATH="$srcdir"

# secfixes:
#   6.14.0-r0:
#     - CVE-2025-52890
#     - CVE-2025-52889

prepare() {
	default_prepare
	go mod download
}


build() {
	export CGO_CFLAGS="-I/usr/include/raft -I/usr/include/cowsql"
	export CGO_LDFLAGS="$LDFLAGS -lintl"
	export CGO_LDFLAGS_ALLOW="(-Wl,-wrap,pthread_create)|(-Wl,-z,now)"

	make
}

package() {
	# generate bash shell completion script
	chmod 755 "$srcdir"/bin/incus
	"$srcdir"/bin/incus completion bash > "$builddir"/scripts/bash-completion

	for daemon in incusd incus-agent incus-user; do
		install -Dm755 "$srcdir"/bin/$daemon "$pkgdir"/usr/sbin/$daemon
	done

	for tool in $_tools; do
		install -Dm755 "$srcdir"/bin/$tool "$pkgdir"/usr/bin/$tool
	done

	for init in incusd incus-agent incus-user; do
		install -Dm755 "$srcdir"/$init.initd \
		"$pkgdir"/etc/init.d/${init}
	done
	install -Dm644 "$srcdir"/incusd.confd \
		"$pkgdir"/etc/conf.d/incusd

	install -Dm644 "$builddir"/scripts/bash-completion \
		"$pkgdir"/usr/share/bash-completion/completions/incus

	install -Dm755 "$builddir"/scripts/empty-incus.sh \
		"$pkgdir"/usr/bin/empty-incus.sh
}

agent() {
	pkgdesc="Incus agent"
	amove usr/sbin/incus-agent
}

agent_openrc() {
	pkgdesc="Incus agent OpenRC scripts"
	install_if="openrc ${subpkgname%-openrc}=$pkgver-r$pkgrel"
	amove etc/init.d/incus-agent
}

client() {
	pkgdesc="Incus CLI client"
	install -d "$subpkgdir"/usr/bin
	amove usr/bin/incus
}

user() {
	pkgdesc="Incus user project daemon"
	amove usr/sbin/incus-user
}

user_openrc() {
	pkgdesc="Incus user project daemon OpenRC scripts"
	install_if="openrc ${subpkgname%-openrc}=$pkgver-r$pkgrel"
	amove etc/init.d/incus-user
}

conversion() {
	pkgdesc="Tools to convert a prior lxc/lxd instance to incus"
	amove usr/bin/lxc-to-incus
	amove usr/bin/lxd-to-incus
}

utils() {
	pkgdesc="Incus utilities and scripts"
	depends="$pkgname py3-lxc jq"

	amove usr/bin
}

vm() {
	pkgdesc="Install packages required to run VMs under Incus"
	case "$CARCH" in
		x86_64)  depends="ovmf
					qemu-system-x86_64"  ;;
		aarch64) depends="aavmf
					qemu-system-aarch64" ;;
	esac
	depends="$depends
		qemu-chardev-spice
		qemu-hw-usb-redirect
		qemu-hw-display-virtio-vga
		qemu-hw-display-virtio-gpu-pci
		qemu-img
		qemu-ui-spice-core
		$pkgname-utils
		sgdisk
		util-linux-misc
		virtiofsd
		"
	install -d "$subpkgdir"
}

openrc() {
	# provides=$pkgname-openrc=$pkgver-r$pkgrel
	default_openrc
}

oci() {
	pkgdesc="Install packages required to run OCI images under Incus"
	depends="$depends skopeo umoci"
	install -d "$subpkgdir"
}

check() {
	# FIXME: disable failing tests
	echo "Skipping tests"
	#go test -v -skip "TestCluster_*|TestIntegration_UnixSocket|TestContainerTestSuite_*|TestDotGo|TestParse|TestPackages|TestConvertNetworkConfig|TestSnapshotCommon|TestHttpRequest" ./...
}

sha512sums="
b30c7577d127ee751f6ad9413625bda9b1643d2ef360cce9795c38f2b84cef549286b7c060acac891dc342a732614ee9fd869417b8459149e90a0536c6abd827  incus-next-6.16.0.tar.gz
91c09c93c29e90cd9d5e4ea0da7fee1c5ee66f7f054addc8c19e7ed102b61e122ba3187a55c78bbf50450134733ef08f390396d36911d1f7fca3adc74bb93bbe  incusd.confd
9912e41a6fdd2e88ac4d452059d5f4ad7d463be7af1afa96139aab31ab42b0dcef44b9299d842e11707047d648973a31025a3f6d636d9ba18cc0107222cb03d1  incusd.initd
a495ca525f2d98771e076026e9046f5d120aa929ed114cae330829ad698c4dbc5d80ed815328f3558584520f6c8d44d7b037721eb977b70f0ad288f6ad19e9cf  incus-agent.initd
ac40bdeb902a95c10d814a92ebf8f94b7d03858796278258b3bac43044329790d64fbd29a90db2491964d0228f894a098fee27699a37e635295b5c4386a50028  incus-user.initd
2fb9f4b3e70eca29b023d17120eb4730efc9e4ad560ad94337ecbaf09992b800554a942847b1b992076712378c644f493a5ca3c58513760a26ba816f4c6dc8fc  0001-statically-build-incus-agent-and-incus-migrate.patch
"
