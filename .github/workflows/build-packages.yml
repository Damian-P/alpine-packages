name: Build and Publish APKs

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  detect-packages:
    name: Detect modified packages
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.set-packages.outputs.packages }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Pour pouvoir comparer avec origin/main

      - id: set-packages
        run: |
          # Detecte APKBUILD modifiés sous packages/
          pkgs=$(git diff --name-only origin/main...HEAD | grep '^packages/.*/APKBUILD' | cut -d/ -f2 | sort -u | tr '\n' ' ')
          echo "Detected packages: $pkgs"
          echo "::set-output name=packages::$pkgs"

  build:
    name: Build APKs multi-arch
    needs: detect-packages
    runs-on: ubuntu-latest
    if: ${{ needs.detect-packages.outputs.packages != '' }}
    strategy:
      matrix:
        arch: [x86_64, aarch64, armv7]
        # Les paquets seront passés via un input custom (bash) dans le job build
    steps:
      - uses: actions/checkout@v4

      - name: Setup Alpine ${{ matrix.arch }}
        uses: jirutka/setup-alpine@v1
        with:
          arch: ${{ matrix.arch }}

      - name: Install dependencies
        run: |
          apk update
          apk add alpine-sdk git

      - name: Setup abuild keys
        run: |
          mkdir -p ~/.abuild
          echo "${{ secrets.ABUILD_PRIVKEY }}" > ~/.abuild/privkey.rsa
          chmod 600 ~/.abuild/privkey.rsa

      - name: Generate abuild public key
        run: |
          abuild-keygen -n -a
          mkdir -p keys
          cp ~/.abuild/*.pub keys/alpine.pub

      - name: Build detected packages
        run: |
          pkgs="${{ needs.detect-packages.outputs.packages }}"
          echo "Packages to build: $pkgs"
          mkdir -p output/${{ matrix.arch }}

          for pkg in $pkgs; do
            echo "Building $pkg"
            cd packages/$pkg
            abuild -r
            cp /root/packages/${{ matrix.arch }}/*.apk ../../output/${{ matrix.arch }}/
            cd ../../
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: apk-${{ matrix.arch }}
          path: output/${{ matrix.arch }}

  deploy:
    name: Deploy to GitHub Pages
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./public

      - name: Copy public key
        run: |
          mkdir -p public
          cp keys/alpine.pub public/

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
